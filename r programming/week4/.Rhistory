complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
corr("specdata")
source("corr.R")
corr("specdata")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
is.na(test$sulfate)
test[is.na(test$sulfate)]
test[is.na(test$sulfate)]
test[is.na(test$sulfate)]
test(is.na(test$sulfate))
is.na(test$sulfate)
test[is.na(test$sulfate)]
test[is.na(test$sulfate), ]
test[!is.na(test$sulfate), ]
source("corr.R")
corr("specdata")
test[!is.na(test$sulfate), ]$sulfate
test$sulfate[!is.na(test$sulfate), ]
test$sulfate[!is.na(test$sulfate)]
test$sulfate[!is.na(test)]
test$sulfate[!is.na(test$sulfate)]
source("corr.R")
corr("specdata")
test[!is.na(test$sulfate), "sulfate"]
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
test[!is.na(test$sulfate), "sulfate"]
length*test[!is.na(test$sulfate), "sulfate"])
length(test[!is.na(test$sulfate), "sulfate"])
length(test[!is.na(test$nitrate), "nitrate"])
test[!is.na(test$nitrate) & !is.na(test$sulfate), ]
length(test[!is.na(test$nitrate) & !is.na(test$sulfate), ])
test[!is.na(test$nitrate) & !is.na(test$sulfate), ]
source("corr.R")
corr("specdata")
corr("specdata")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
complete("specdata", 54)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "obs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
str(tapply)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
rnorm(10, 1)
rnorm(10)
str(rnorm)
str(runif)
str(gl)
gl(3, 10)
length(gl(3, 10))
tapply(x, f, mean)
f <- gl(3, 10)
tapply(x, f, mean)
x
f
length(x)
length(f)
x[1:10]
mean(x[1:10])
mean(x[11:20])
mean(x[21:30])
tapply(x, f, range)
split(x, f)
lapply(split(x, f), mean)
gl(2,5)
gl(5,2)
interaction(gl(2,5), gl(5,2))
source('C:/dev/play/datasciencecoursera/week2/corr.R')
source('C:/dev/play/datasciencecoursera/week2/corr.R')
corr <- function(directory, threshold = 0) {
completedCases <- complete(directory)
results <- c()
for(monitor in completedCases$id) {
if(completedCases$obs[[monitor]] > threshold) {
data = read.csv(paste(directory, "\\", str_pad(monitor, 3, pad = "0"), ".csv", sep=""))
complete <- data[!is.na(data$nitrate) & !is.na(data$sulfate), ]
corResult <- cor(complete$sulfate, complete$nitrate)
results <- c(results, corResult)
}
}
results
}
setinverse <- function(inverse) m <<- inverse
getmean <- function() m
matrix(3,2)
matrix(rnorm, 3, 2)
matrix(rnorm(n = 1), 3, 2)
matrix(rnorm(n = 6), 3, 2)
solve(matrix(rnorm(n = 6), 3, 2))
solve(matrix(rnorm(n = 16), 4, 4))
source('C:/dev/play/dataLearning/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(rnorm(n = 16), 4, 4))
x <- makeCacheMatrix(matrix(rnorm(n = 16), 4, 4))
cacheSolve(x)
cacheSolve(x)
cacheSolve(x)
cacheSolve(x)
library(datasets)
data(iris)
?iris
iris
iris[iris$Species = 'virginica']
iris[iris$Species = "virginica"]
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica", ]
mean(iris[iris$Species == "virginica", "Sepal.length"])
iris[iris$Species == "virginica", "Sepal.length"]
iris[iris$Species == "virginica", "Sepal.Length"]
mean(iris[iris$Species == "virginica", "Sepal.Length"])
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 1, mean)
rowMeans(iris[, 1:4])
data(mtcars)
mtcars
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
str(mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mpg, cyl, mean)
with(mtcars)
with(mtcars, expr = mpg)
mtcars
with(mtcars, expr = mpg)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcars$cyl
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
debug(ls)
ls
c
tapply(iris,)
undebug(ls)
iris
tapply(iris$Sepal.Length, iris$Species, mean)
str(iris)
summary(iris)
str(str)
str(lm)
str(ls)
x <- rnorm(100, 2, 4)
summary(x)
str(x)
gl(40, 10)
x <- gl(40, 10)
str(x)
summary(str)
summary(x)
head(airquality)
str(airquality)
m <- matrix(rnorm(100), 10, 10)
str(x)
str(m)
l <- split(airquality, airquality$Month)
str(l)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
rbinom(100, 1, 0.5)
set.seed(1)
rpois(5, 2)
rep(0:1, each = 5)
rbinom(10)
rbinom(n = 10, size = 3)
rbinom(n = 10, size = 3, prob = 0.5)
rbinom(n = 10, size = 1, prob = 0.5)
setwd("C:/dev/play/datasciencecoursera/week4")
head(outcome)
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
head(outcome)
ncol(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
outcome$State
split(outcome, outcome$State)
groupedByState <- split(outcome, outcome$State)
outcome[["Hospital.30.Day.Readmission.Rates.from.Heart.Failure"]]
outcome[["Hospital.30.Day.Readmission.Rates.from.heart.Failure"]]
outcome[outcome$State = "CA"]
outcome[outcome$State = "CA", ]
outcome$State = "CA"
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[outcome$State = "CA"]
outcome[outcome$State = 'CA']
outcome(outcome$State = 'CA')
ca <- outcome$State = "CA"
outcome$State
unique(outcome$State)
outcome(outcome$State == "CA")
outcome[outcome$State == "CA"]
outcome[outcome$State == "CA", ]
outcome[outcome$State == "asdf", ]
outcome[outcome$State == "CA", ]$"Hospital.30.Day.Readmission.Rates.from.Heart.Failure"
split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)
unique(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name))
min(1:10)
min(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)[["Hospital.30.Day.Readmission.Rates.from.Heart.Failure")]]
min(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)[["Hospital.30.Day.Readmission.Rates.from.Heart.Failure"]])
split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)[["Hospital.30.Day.Readmission.Rates.from.Heart.Failure"]]
split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)
split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)[0]
split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)[[0]]
head(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name))
nrows(head(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)))
length(head(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)))
head(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name))
names(split(outcome[outcome$State == "CA", ], outcome$Hospital.Name))
byHospital <- split(outcome[outcome$State == "CA", ], outcome$Hospital.Name)
lapply(byHospital, nrow)
nrow(1:10)
?nrow
nrow(1:10)
lapply(byHospital, length)
lapply(byHospital, length)
byHospital$`ABBEVILLE AREA MEDICAL CENTER`
class(byHospital$`ABBEVILLE AREA MEDICAL CENTER`)
row(byHospital$`ABBEVILLE AREA MEDICAL CENTER`)
nrow(byHospital$`ABBEVILLE AREA MEDICAL CENTER`)
lapply(byHospital, nrow)
nrow(byHospital$`EAST ALABAMA MEDICAL CENTER AND SNF`)
max(nrow(byHospital$`EAST ALABAMA MEDICAL CENTER AND SNF`))
outcome[outcome$State == state, ]
outcome[outcome$State == "CA", ]
nrow(outcome[outcome$State == "CA", ])
outcome[outcome$State == "CA", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack"]
nrow(outcome[outcome$State == "CA", ])
class(outcome[outcome$State == "CA", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack"])
as.numeric(outcome[outcome$State == "CA", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack"])
as.numeric(outcome[outcome$State == "CA", "Hospital.Name"])
outcome[outcome$State == "CA", "Hospital.Name"]
byHospital$`ABBEVILLE GENERAL HOSPITAL`
outcome$Hospital.Name
outcome[outcome$State == "CA"]
outcome[outcome$State == "CA", ]
ncol(outcome[outcome$State == "CA", ])
nrow(outcome[outcome$State == "CA", ])
outcome[outcome$State == "CA", ]$Hospital.Name
stateOutcomes <- outcome[outcome$State == "CA", ]
split(stateOutcomes, stateOutcomes$Hospital.Name)
byHospitalName = split(stateOutcomes, stateOutcomes$Hospital.Name)
lapply(byHospitalName, nrow)
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Heart.Attack)]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Heart.Attack), ]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Heart.Attack), "Hospital.30.Day.Readmission.Rates.from.Heart.Attack"]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Heart.Failure), "Hospital.30.Day.Readmission.Rates.from.Heart.Failure"]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia), "Hospital.30.Day.Readmission.Rates.from.Pneumonia"]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), ["Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name"]]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c"Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")]
head(stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")])
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][1]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][[1]]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][[0]]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][1][1]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][1][1][1]
class(stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")])
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][["Hospital.name"]]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][["Hospital.Name"]]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), c("Hospital.30.Day.Readmission.Rates.from.Pneumonia", "Hospital.Name")][["Hospital.Name"]][1]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), Hospital.Name"][["Hospital.Name"]][1]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), "Hospital.Name"][["Hospital.Name"]][1]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), "Hospital.Name"]
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), "Hospital.Name"][1]
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("CA", "Hospital.30.Day.Readmission.Rates.from.Pneumonia")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("CA", "Hospital.30.Day.Readmission.Rates.from.Pneumonia")
debug(best)
best("CA", "Hospital.30.Day.Readmission.Rates.from.Pneumonia")
undebug(best)
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("CA", "Hospital.30.Day.Readmission.Rates.from.Pneumonia")
best("CA", "Hospital.30.Day.Readmission.Rates.from.Pneumonia")
best("CA", "Hospital.30.Day.Readmission.Rates.from.Pneumonia")
best("CA", "Hospital.30.Day.Readmission.Rates.from.Pneumonia")
best("CA", "pneumonia")
best("CA", "pneumonia")
best("TX", "heart attack")
best("TX", "heart failure")
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart failure")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart failure")
best("TX", "heart failure")
best("TX", "heart failure")
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart failure")
stateOutcomes[order(stateOutcomes$Hospital.30.Day.Readmission.Rates.from.Pneumonia, stateOutcomes$Hospital.Name), "Hospital.Name"][1]
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart failure")
stateOutcomes$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("MD", "pneumonia")
ordered
stateValues[ordered, c("Hospital.Name", columnName)]
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
best("TX", "heart failure")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("MD4", "pneumonia")
best("MD", "pneumoni123a")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("MD", "pneumoni123a")
best("MD", "pneumoni123a")
best("MD4", "pneumonia")
best("MD4", "pneumonia")
best("MD", "pneumonia")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("MD", "pneumonia")
best("MD4", "pneumonia")
best("MD", "pneumoni123a")
best("MD", "heart attack")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("MD", "heart attack")
best("MD", "pneumoni123a")
best("MD", "heart attack")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
View(ordered)
View(ordered)
rankhospital("MD", "heart attack", "worst")
lapply(ordered, as.numeric(ordered$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
sapply(ordered[, 2], as.numeric)
ordered[, 2] <- sapply(ordered[, 2], as.numeric)
ordered
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
rankhospital("MD", "heart attack", "worst")
View(ordered)
rankhospital("MD", "heart attack", "worst")
stateValues[!is.na(stateValues[[columnName]])]
nrow(stateValues[!is.na(stateValues[[columnName]])])
nrow(stateValues[is.na(stateValues[[columnName]])])
stateValues[, columnName]
stateValues[is.na(stateValues[[columnName]])][[columnName]]
stateValues[is.na(stateValues[[columnName]])]
complete.cases(stateValues[, c("Hospital.Name", columnName)])
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
rankhospital("MD", "heart attack", "worst")
View(reduced)
View(ordered)
rankhospital("MD", "heart attack", "worst")
reduced[complete.cases(stateValues[, c("Hospital.Name", columnName)]), ]
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
rankhospital("MD", "heart attack", "worst")
reduced[complete.cases(reduced), ]
View(ordered)
rankhospital("MD", "heart attack", "worst")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
View(corr)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
unique(data$State)
lapply(unique(data$State), rankhospital, "heart failure", "best")
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
head(rankall("heart attack", 20), 10)
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
head(rankall("heart attack", 20), 10)
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
test <- data.frame(orderedStates, results)
unlist(results)
debugSource('C:/dev/play/datasciencecoursera/week4/assignment.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('C:/dev/play/datasciencecoursera/week4/assignment.R')
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
